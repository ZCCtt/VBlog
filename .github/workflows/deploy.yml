name: Deploy Blog and Release

on:
  push:
    branches: [ master ]  # 如果使用 master 分支请替换为 master
  release:
    types: [created]    # 当有新 release 创建时触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    # 1. 检出代码
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # 2. 设置 Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'

    # 3. 安装依赖并构建
    - name: Install dependencies
      run: npm install

    - name: Build project
      run: npm run build
      
    # 4. 打包构建产物 (用于 Release)
    - name: Package artifacts
      run: |
        mkdir -p release-artifacts
        tar -czvf release-artifacts/blog-build-$(date +%Y%m%d%H%M%S).tar.gz ./dist
        tar -czvf release-artifacts/source-code-$(date +%Y%m%d%H%M%S).tar.gz --exclude='node_modules' --exclude='.git' .
    
    # 5. 部署到 GitHub Pages
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        keep_files: true  # 保留历史文件

    # 6. 创建 GitHub Release 并上传构建产物
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      if: github.event_name == 'release'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.release.tag_name }}
        release_name: ${{ github.event.release.name }}
        draft: false
        prerelease: false

    # 7. 上传 Release 资产
    - name: Upload Release Assets
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release-artifacts/*.tar.gz
        asset_name: ${{ github.event.release.tag_name }}-build-assets.tar.gz
        asset_content_type: application/gzip
